generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("MONGO_CONNECTION_STRING")
}

model GuitarProTabDownloadLinks {
  id                    String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt             DateTime @default(now())
  songsterrSongId       String   @unique
  songsterrDownloadLink String   @unique
  songsterrOriginUrl    String?
  artist                String?
  songTitle             String?
  s3DownloadLink        String?
  songsterrUrlId        String?
  metadata              Json?
}

model Orders {
  id             String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt      DateTime @default(now())
  paymentType    String
  rawPaymentData Json
}

// IP ADDRESS TABLES -- START --
model IPAddress {
  id        String           @id @default(auto()) @map("_id") @db.ObjectId
  ipAddress String           @unique
  downloads IPSongDownload[] // add an afterUpdate hook to add the 'amount' field to each Download
}

model Song {
  id              String           @id @default(auto()) @map("_id") @db.ObjectId
  songsterrSongId Int              @unique
  IPSongDownload  IPSongDownload[]
}

model IPSongDownload {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  ipAddress   IPAddress @relation(fields: [ipAddressId], references: [id])
  ipAddressId String    @db.ObjectId
  song        Song      @relation(fields: [songId], references: [id])
  songId      String    @db.ObjectId

  @@unique([ipAddressId, songId])
}

// IP ADDRESS TABLES -- END --
